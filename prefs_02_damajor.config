[final01]

#define SSAO_ENABLED
#define FPS_GAIN                     // Slightly lower quality SSAO for, hopefully, better performance

#ifdef SSAO_ENABLED
#ifdef FPS_GAIN            // Different values to get a good perf/quality ratio ( also uses another, cheaper function)

        const float SSAO_MULT = 0.75;

        const float EFFECT_SIZE = 8;        //Overall "shadow sheathe" size
        const int SAMPLES = 5;                //iterations of the ssao computation

        const float DISTANCE_DECAY_BEGINS = 10.0;    //effect starts to decay
        const float DISTANCE_DECAY_ENDS = 50.0;        //effect completely decayed

    #else

        const float SSAO_MULT = 0.75;         //ok for clean, non realist TPs

        const float EFFECT_SIZE = 10.0;        //Overall "shadow sheathe" size
        const int SAMPLES = 7;                //iterations of the ssao computation

        const float DISTANCE_DECAY_BEGINS = 20.0;    //effect starts to decay
        const float DISTANCE_DECAY_ENDS = 50.0;        //effect completely decayed ( can't be greather than 160 for now )
    #endif
#endif

[final02]

//#define CEL_SHADING

#ifdef CEL_SHADING
    const float CEL_EDGE_THRESHOLD = 0.5;
    const float CEL_EDGE_THICKNESS = 1.50;
#endif

[final03]

#define GOD_RAYS

#ifdef GOD_RAYS
    const float GR_DECAY    = .98;            // Master Parameter, should be raised using the second digit
    const float GR_DENSITY  = .9;            // More or less the "length" of the rays. Lessen the Exposure if your eyes hurt.
    const float GR_EXPOSURE = 0.65;            // "Strength" of the effect.
    const int GR_SAMPLES    = 32;            // "Precision" of the effect. The more the lag-er !
#endif

[final04]

#define BLUR_FP //blur First Pass

[final05]

#define BLUR_SP //blur Second Pass

[final06]

#define NEWBLOOM_ENABLED
#define FPS_GAIN

#ifdef NEWBLOOM_ENABLED
    const float BLOOM_STRENGTH = 0.85;    //ok for clean, non realist TPs
    const float BLOOM_SIZE = 15.0;
    const int B_SAMPLES = 15;

    #ifdef FPS_GAIN
        const int BLUR_CROSS_TYPE = 0;    // set this to 1 if you prefer a diagonal cross to a vertical/horizontal one
    #endif

#endif

[final07]

#define AMBIENT

[final08]

#define WATER_BOBBLE
#define HEAT_HAZE

#ifdef HEAT_HAZE
    const int[] heatHazeBiomes = int[](5, 8, 12);  // Look in the uniform documentation for the biome id's.
#endif

[final09]

//#define DOF_ENABLED
#ifdef DOF_ENABLED
    const float HYPERFOCAL = 0.05;
#endif

[final10]

#define GAMMA 1.1
//#define THERMAL_VISION
#define NIGHTVISION
//#define BW_DREAMS
//#define LENS
//#define WANT_PIXELS
//#define MOVING_BLACKHOLE

// LENS Params
//#define LENS_INRAD 0.18
//#define LENS_OUTRAD 0.25

// Want Pixels Params
#ifdef WANT_PIXELS
    const float wp_pixel_width = 8.0;
    const float wp_pixel_height = 4.0;
#endif

// Thermal Vision Params
#ifdef THERMAL_VISION
    const int thermal_vision_itemid = 76;
#endif

// Nightvision Params
#ifdef NIGHTVISION
    const int nightvision_itemid = 89;      // 89 = Glowstone
    float noiseamount = 0.7;                //Amount of noise
    vec2 lensRadius = vec2(0.4, 0.0);      //Radius and feathering of vignette
    vec3 nvcol = vec3(1.1, 4.0, 1.1);       //Change these values for nightvision color
                  // (red, green, blue)
#endif

[final11]
[final12]
[final13]
[final14]

#define BETA_UI

#ifdef BETA_UI
    const vec4 healthColor = vec4(1.0, 0.0, 0.0, 0.7);
    const vec4 armorColor = vec4(0.0, 0.0, 1.0, 0.7);
    const float mainCellTransp = 0.5; // 0.0 to 1.0
    const float emptyHealthCellTransp = 0.35;
    const float emptyArmorCellTransp = 0.45;
    const float stepSize = 0.04; // size between center of each cells - in percent (0 to 1) of the screen
    const float cellSize = 0.0125; // size of the cell - in percent (0 to 1) of the screen
    const float cellBorderSize = 0.001;
#endif

[final15]
[final16]
[final17]
[final18]
[final19]
[final20]

